// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("MEMBER") // ADMIN, ZELATOR, MEMBER
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rosesManaged    Rose[]
  roseMemberships RoseMembership[]
}

model Rose {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  zelatorId String
  zelator   User   @relation(fields: [zelatorId], references: [id])

  members RoseMembership[]
  // Możemy dodać pole na intencję główną, np.
  // currentIntention String?
  // currentIntentionSetAt DateTime?
}

model RoseMembership {
  id        String   @id @default(cuid())
  userId    String
  roseId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Aktualnie przydzielona tajemnica - nadal tu jest dla szybkiego dostępu
  currentAssignedMystery String?
  mysteryConfirmedAt     DateTime?

  user User @relation(fields: [userId], references: [id])
  rose Rose @relation(fields: [roseId], references: [id])

  // Relacja do historii przydzielonych tajemnic
  mysteryHistory AssignedMysteryHistory[]

  @@unique([userId, roseId])
}

// NOWY MODEL: Historia przydzielonych tajemnic
model AssignedMysteryHistory {
  id            String   @id @default(cuid())
  membershipId  String   // Powiązanie z konkretnym członkostwem w Róży
  mystery       String   // Nazwa przydzielonej tajemnicy
  assignedMonth Int      // Miesiąc przydziału (1-12)
  assignedYear  Int      // Rok przydziału
  assignedAt    DateTime @default(now()) // Dokładna data i czas przydziału

  membership RoseMembership @relation(fields: [membershipId], references: [id], onDelete: Cascade) // Jeśli usuniemy członkostwo, usuń też historię

  // Indeks dla szybszego wyszukiwania historii dla danego członkostwa
  @@index([membershipId])
  // Opcjonalnie, unikalność dla danego członkostwa, tajemnicy i miesiąca/roku, jeśli chcemy zapobiec duplikatom
  // @@unique([membershipId, mystery, assignedMonth, assignedYear])
}